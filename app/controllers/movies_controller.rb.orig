class MoviesController < ApplicationController

  Rails.logger = Logger.new(STDOUT)
  def show
    id = params[:id] # retrieve movie ID from URI route
    @movie = Movie.find(id) # look up movie by unique ID
    # will render app/views/movies/show.<extension> by default
  end

  def index
<<<<<<< HEAD
    @all_ratings = Movie.ratings
    @sort_by = params[:sort] || session[:sort]
    @ratings = (params[:ratings].present? ? params[:ratings].keys : @all_ratings)
    logger.debug("ratings hash: #{@ratings}")
    if @sort_by == 'title'
      @title = 'hilite'
      @movies = Movie.where('rating' => @ratings).order('title ASC')
    elsif @sort_by == 'release_date'
      @release_date = 'hilite'
      @movies = Movie.where('rating' => @ratings).order('release_date ASC')
    else
      @movies = Movie.where('rating' => @ratings)
=======
    @sort_by = params[:sort] || session[:sort]
    if @sort_by == 'title'
      @movies = Movie.order('title ASC')
    elsif @sort_by == 'release_date'
      @movies = Movie.order('release_date ASC')
    else
      @movies = Movie.all
>>>>>>> a5f8959acfc99d91be57c7be8c07327f8de4b94c
    end
  end

  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully created."
    redirect_to movies_path
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

end
